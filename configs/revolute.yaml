name: revolute
tag: '01'
seed: 42
source: sapien/oven/101917
exp_dir: ./exp/${source}/${name}

dataset:
  name: blender_paris
  scene: 103111
  root_dir: ./load/${source}/
  img_wh:
    - 800
    - 800
  train_scale: 1.0
  val_scale: 0.1
  test_scale: 1.0
  pred_scale: 1.0
  near_plane: 2.0
  far_plane: 6.0
  view_downsample: true
  n_downsample: 64
  random_downsample: true # if not, using farthest point sample
  white_bkgd: true
  spheric_poses: false
  use_pixel_centers: true
  train_split: 'train'
  val_split: 'val'
  test_split: 'test'
  pred_split: 'pred'
  view_idx: '0003' # the view for prediction
  # perturb_cam: false # if we want to perturb the camera
  # misalign: false
  # std_angle: 5     # the std of the perturb angle in degrees
  # std_dist: 0.01     # the std of the translational error

model:
  name: revolute
  radius: 1.5
  init_angle: 0.1
  init_dir:
    - 1.
    - 1.
    - 1.
  # motion_gt: false
  # motion_init_gt: false
  # init_guaranteed: false
  # field_init_gt: false
  # ignore_translate: true
  motion_gt_path: ./data/${source}/textured_objs/trans.json
  render_step_size: 5.e-3
  num_samples_per_ray: 1024
  train_num_rays: 256
  max_train_num_rays: 1024
  grid_prune: false
  grid_warmup: 2000
  dynamic_ray_sampling: true
  batch_image_sampling: true
  randomized: true
  ray_chunk: 4096
  white_bkgd: true
  # use_maximum: false
  # use_distortion: false
  # use_swi: false
  # use_intersect: false
  use_part_mask: true
  # use_align_noi: false
  # ray_marching:
  #   alpha_thre: 0.
  #   early_stop_eps: 0.
  # comp_rendering:
  #   alpha_thre: 0.
  #   early_stop_eps: 0.
  geometry:
    name: volume-density
    radius: ${model.radius}
    feature_dim: 16
    raw_noise_std: 0.
    density_activation: trunc_exp
    density_bias: -1
    isosurface:
      method: mc
      resolution: 256
      chunk: 200000 # 2097152
      threshold: 10.0
    xyz_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378  
    mlp_network_config:
      otype: FullyFusedMLP
      activation: ReLU
      output_activation: none
      n_neurons: 64
      n_hidden_layers: 1
  texture:
    name: volume-radiance
    input_feature_dim: ${model.geometry.feature_dim}
    dir_encoding_config:
      otype: SphericalHarmonics
      degree: 4    
    mlp_network_config:
      otype: FullyFusedMLP
      activation: ReLU
      output_activation: Sigmoid
      n_neurons: 64
      n_hidden_layers: 2
  
system:
  name: revolute-system
  save_volume: false # deprecated
  volume_res: 64 # deprecated
  second_stage: 100
  loss:
    lambda_rgb: 1.    
    lambda_mask: 0.1
    lambda_blend_ratio: 0.000
    # skew_blend_ratio: 1.0 # skewness of the BCE
    lambda_part_mask: 0.000
    # skew_part_mask: 1.0   # skewness of the BCE
    lambda_align_noi: 0.1
    reg_from_iter: 5000
    # lambda_swipe_ratio: 0.0
    # lambda_distortion: 0. # deprecated
    # lambda_weights: 0.000 # deprecated
    # lambda_min_alpha: 0.0 # deprecated
    # lambda_opaque: 0. # deprecated
    # lambda_inter_ratio: 0.0 # deprecated
  model_optimizer:
    name: Adam
    args:
      lr: 0.002
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      static_geometry:
          lr: ${system.model_optimizer.args.lr}
      static_texture:
          lr: ${system.model_optimizer.args.lr}
      dynamic_geometry:
          lr: ${system.model_optimizer.args.lr}
      dynamic_texture:
          lr: ${system.model_optimizer.args.lr}
  motion_optimizer:
    name: Adam
    args:
      lr: 0.01
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      axis_o:
          lr: ${system.motion_optimizer.args.lr}
      quaternions:
          lr: ${system.motion_optimizer.args.lr}
  model_scheduler:
    name: MultiStepLR
    interval: step
    args:
      milestones: [10000, 15000, 18000, 20000, 25000]
      gamma: 0.5
  
  # warmup_steps: 200
  motion_scheduler:
    name: MultiStepLR
    interval: step
    args:
      milestones: [5000, 10000, 15000, 18000, 20000, 25000]
      gamma: 0.33
      # gamma: 0.9998848773724686
      # gamma: 1.0

    # name: SequentialLR
    # interval: step
    # milestones:
    #       - ${system.warmup_steps}
    # schedulers:
    #   - name: LinearLR # linear warm-up in the first system.warmup_steps steps
    #     args:
    #       start_factor: 0.01
    #       end_factor: 1.0
    #       total_iters: ${system.warmup_steps}
    #   # - name: ExponentialLR
    #   #   args:
    #   #     gamma: ${calc_exp_lr_decay_rate:0.1,${sub:${trainer.max_steps},${system.warmup_steps}}}
    #   - name: MultiStepLR
    #     interval: step
    #     args:
    #       milestones: [5000, 10000, 15000, 18000, 20000, 25000]
    #       gamma: 0.33

checkpoint:
  save_top_k: -1
  every_n_train_steps: 10000
  save_last: true

trainer:
  fast_dev_run: false
  max_steps: 10000  # the step is global_step (optim step), so the actual step is half if w/ two optim
  log_every_n_steps: 10
  num_sanity_val_steps: 0
  val_check_interval: 500
  limit_train_batches: 1.0
  limit_val_batches: 3
  enable_progress_bar: true 
  precision: 16
